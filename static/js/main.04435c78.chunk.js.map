{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","onShowTodo","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","todoSelector","onChangeTodoSelector","todoFilter","onChangeTodoFilter","value","onChange","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onHideTodo","useState","selectedTodoUser","setSelectedTodoUser","useEffect","userId","user","href","name","App","isLoading","setIsLoading","setTodos","setSelectedTodo","setTodoSelector","setTodoFilter","receivedTodos","length","selectedTodos","filter","todoTitleIncludesFilter","toLowerCase","includes","event","target","currentTarget","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04435c78.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onShowTodo: (todo: Todo | null) => () => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onShowTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={cn({\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              {selectedTodo === todo ? (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={onShowTodo(null)}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye-slash\" />\n                  </span>\n                </button>\n              ) : (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={onShowTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              )}\n            </td>\n          </tr>\n        ))}\n        {/* <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">1</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">delectus aut autem</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n      <tr data-cy=\"todo\" className=\"has-background-info-light\">\n        <td className=\"is-vcentered\">2</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye-slash\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">1</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">delectus aut autem</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">6</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">\n            qui ullam ratione quibusdam voluptatem quia omnis\n          </p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">8</td>\n        <td className=\"is-vcentered\">\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </td>\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr> */}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  todoSelector: string;\n  onChangeTodoSelector: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n  todoFilter: string;\n  onChangeTodoFilter: (\n    event:\n    | React.ChangeEvent<HTMLInputElement>\n    | React.MouseEvent<HTMLButtonElement>,\n  ) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  todoSelector,\n  onChangeTodoSelector,\n  todoFilter,\n  onChangeTodoFilter,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={todoSelector}\n            onChange={onChangeTodoSelector}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={todoFilter}\n          onChange={onChangeTodoFilter}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {todoFilter !== '' && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={onChangeTodoFilter}\n              aria-label=\"Clear search\"\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo | null;\n  onHideTodo: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, onHideTodo }) => {\n  const [selectedTodoUser, setSelectedTodoUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId).then((user) => setSelectedTodoUser(user));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedTodo || !selectedTodoUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onHideTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong\n                className={cn({\n                  'has-text-success': selectedTodo.completed,\n                  'has-text-danger': !selectedTodo.completed,\n                })}\n              >\n                {selectedTodo.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">{selectedTodoUser.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [todoSelector, setTodoSelector] = useState('all');\n  const [todoFilter, setTodoFilter] = useState('');\n\n  useEffect(() => {\n    getTodos().then((receivedTodos) => {\n      if (receivedTodos.length > 0) {\n        const selectedTodos = receivedTodos.filter((todo) => {\n          const todoTitleIncludesFilter = todo.title\n            .toLowerCase()\n            .includes(todoFilter.toLowerCase());\n\n          switch (todoSelector) {\n            case 'active':\n              return !todo.completed && todoTitleIncludesFilter;\n            case 'completed':\n              return todo.completed && todoTitleIncludesFilter;\n            default:\n              return todoTitleIncludesFilter;\n          }\n        });\n\n        setTodos(selectedTodos);\n        setIsLoading(false);\n      }\n    });\n  }, [todoSelector, todoFilter]);\n\n  const showTodoDetails = (todo: Todo | null) => () => {\n    setSelectedTodo(todo);\n  };\n\n  const hideTodoDetails = () => {\n    setSelectedTodo(null);\n  };\n\n  const handleTodoSelection = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setTodoSelector(event.target.value);\n  };\n\n  const handleTodoFiltering = (\n    event:\n    | React.ChangeEvent<HTMLInputElement>\n    | React.MouseEvent<HTMLButtonElement>,\n  ) => {\n    if (event.currentTarget.className === 'input') {\n      setTodoFilter(event.currentTarget.value);\n    } else {\n      setTodoFilter('');\n    }\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todoSelector={todoSelector}\n                onChangeTodoSelector={handleTodoSelection}\n                todoFilter={todoFilter}\n                onChangeTodoFilter={handleTodoFiltering}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              <TodoList\n                todos={todos}\n                selectedTodo={selectedTodo}\n                onShowTodo={showTodoDetails}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo !== null && (\n        <TodoModal selectedTodo={selectedTodo} onHideTodo={hideTodoDetails} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}